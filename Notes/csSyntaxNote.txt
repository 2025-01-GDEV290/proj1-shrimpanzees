Understanding Syntax in C#

Lets take for example the idea of the following familiar line.

Console.WriteLine("Hello World");

we have literal string in the form of "Hello World!", and we have class 'Console'and a method call WriteLine().

Understand that it's single class, multiple methods and the way we navigate that is with the .

 
Methods are more involved, you must always utilize () after a method call.
Some method calls will require input parameters.

Semicolon use is to tell compiler command line good.
Capitalization matters, case sensitive.

we can have also done something the like of 

Console.Write("");

One thing that looks like a glaring object is


public static void WriteLine(object? value);

example can look like this

Object[] values= {true,12.632, 17908, "stringValue", 'a', 16907.32m };
foreach (var value in values)
Console.WriteLine(value);

//There's notes here but lets check this actually line by line
//true here was boolean choices, so true false
//numeric value
//"a stringValue", but like actually a string 
// 'a' ngl there's a name for this
//123.123 a numeric value that includes a . to point at thing














public static void Write (decimal value);

public class FormatConverter
{
    public static void Main(string[] args)
    {
        string lineInput;
        while ((lineInput = Console.ReadLine()) != null)
        {
            string[] fields = lineInput.Split(new char[] {'\t'});
            bool isFirstField = true;
            foreach (var item in fields)
            {
                if (isFirstField)
                    isFirstField = false;
                else
                    Console.Write(',');

                // If the field represents a boolean, replace with a numeric representation.
                bool itemBool;
                if (Boolean.TryParse(item, out itemBool))
                    Console.Write(Convert.ToByte(itemBool));
                else
                    Console.Write(item);
            }
            Console.WriteLine();
        }
    }
}


